{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': '83ff170a-9e2f-4ae1-9d22-ce71c81310bb',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '34',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: { query: 'query post {id}' }
    },
    res: {
      statusCode: 400,
      body: { errors: [ { message: 'Missing query' } ] }
    },
    responseTime: 21
  },
  level: 'info',
  message: 'HTTP GET /graphql',
  timestamp: '2024-01-29T07:01:56.888Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': 'f7f4a36f-b488-46d5-88ca-893aa2bc6c74',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '36',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: { query: 'query {post {id}}' }
    },
    res: {
      statusCode: 400,
      body: { errors: [ { message: 'Missing query' } ] }
    },
    responseTime: 0
  },
  level: 'info',
  message: 'HTTP GET /graphql',
  timestamp: '2024-01-29T07:03:02.268Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': 'ba8c68e0-06b3-4c56-b745-ab15e0e8ff10',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '37',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: { query: 'query {posts {id}}' }
    },
    res: {
      statusCode: 400,
      body: { errors: [ { message: 'Missing query' } ] }
    },
    responseTime: 0
  },
  level: 'info',
  message: 'HTTP GET /graphql',
  timestamp: '2024-01-29T07:03:46.714Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': '9169658d-a53e-48f1-90d6-8e679ca477c3',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '37',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: { query: 'query {posts {id}}' }
    },
    res: {
      statusCode: 400,
      body: { errors: [ { message: 'Missing query' } ] }
    },
    responseTime: 1
  },
  level: 'info',
  message: 'HTTP GET /graphql',
  timestamp: '2024-01-29T07:04:44.031Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': '131a78e9-a2f7-41ba-9b6a-755e3decb4d1',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '37',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: { query: 'query {posts {id}}' }
    },
    res: {
      statusCode: 200,
      body: {
        data: { posts: [ { id: '1' } ] }
      }
    },
    responseTime: 12
  },
  level: 'info',
  message: 'HTTP POST /graphql',
  timestamp: '2024-01-29T07:04:50.423Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': '88110b14-b15d-41c9-8dcb-d329d38aff69',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '40',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: { query: 'query {posts {title}}' }
    },
    res: {
      statusCode: 200,
      body: {
        data: { posts: [ { title: 'title in post' } ] }
      }
    },
    responseTime: 2
  },
  level: 'info',
  message: 'HTTP POST /graphql',
  timestamp: '2024-01-29T07:04:58.413Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': '4e182178-f27d-45ee-b022-08e17148352c',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '277',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: {
        query: 'mutation($id: ID) {post(id: $id, idAuthor: $idAuthor, title: $title, body: $body){create {id idAuthor title body}}}',
        variables: {
          id: 2,
          idAuthor: 1,
          title: 'title number 2',
          body: 'content number 2'
        }
      }
    },
    res: {
      statusCode: 200,
      body: {
        errors: [
          {
            message: 'Cannot query field "idAuthor" on type "PostType". Did you mean "author"?',
            locations: [ { line: 1, column: 94 } ]
          },
          {
            message: 'Variable "$idAuthor" is not defined.',
            locations: [ { line: 1, column: 44 }, { line: 1, column: 1 } ]
          },
          {
            message: 'Variable "$title" is not defined.',
            locations: [ { line: 1, column: 62 }, { line: 1, column: 1 } ]
          },
          {
            message: 'Variable "$body" is not defined.',
            locations: [ { line: 1, column: 76 }, { line: 1, column: 1 } ]
          }
        ]
      }
    },
    responseTime: 6
  },
  level: 'info',
  message: 'HTTP POST /graphql',
  timestamp: '2024-01-29T07:06:49.436Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': '5aa29304-bf38-4f1c-b50d-2397a9f1fee8',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '323',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: {
        query: 'mutation($id: ID, $idAuthor: ID, $title: String, $body: String) {post(id: $id, idAuthor: $idAuthor, title: $title, body: $body){create {id idAuthor title body}}}',
        variables: {
          id: 2,
          idAuthor: 1,
          title: 'title number 2',
          body: 'content number 2'
        }
      }
    },
    res: {
      statusCode: 200,
      body: {
        errors: [
          {
            message: 'Cannot query field "idAuthor" on type "PostType". Did you mean "author"?',
            locations: [ { line: 1, column: 140 } ]
          }
        ]
      }
    },
    responseTime: 3
  },
  level: 'info',
  message: 'HTTP POST /graphql',
  timestamp: '2024-01-29T07:07:46.608Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': '642d11ab-51ca-419b-8109-89326067a69a',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '321',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: {
        query: 'mutation($id: ID, $idAuthor: ID, $title: String, $body: String) {post(id: $id, author: $idAuthor, title: $title, body: $body){create {id idAuthor title body}}}',
        variables: {
          id: 2,
          idAuthor: 1,
          title: 'title number 2',
          body: 'content number 2'
        }
      }
    },
    res: {
      statusCode: 200,
      body: {
        errors: [
          {
            message: 'Unknown argument "author" on field "RootMutation.post". Did you mean "idAuthor"?',
            locations: [ { line: 1, column: 80 } ]
          },
          {
            message: 'Cannot query field "idAuthor" on type "PostType". Did you mean "author"?',
            locations: [ { line: 1, column: 138 } ]
          }
        ]
      }
    },
    responseTime: 3
  },
  level: 'info',
  message: 'HTTP POST /graphql',
  timestamp: '2024-01-29T07:08:23.036Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': 'b21d7a35-e4bc-4ec6-a296-0dc0f370a6db',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '323',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: {
        query: 'mutation($id: ID, $idAuthor: ID, $title: String, $body: String) {post(id: $id, idAuthor: $idAuthor, title: $title, body: $body){create {id idAuthor title body}}}',
        variables: {
          id: 2,
          idAuthor: 1,
          title: 'title number 2',
          body: 'content number 2'
        }
      }
    },
    res: {
      statusCode: 200,
      body: {
        errors: [
          {
            message: 'Cannot query field "idAuthor" on type "PostType". Did you mean "author"?',
            locations: [ { line: 1, column: 140 } ]
          }
        ]
      }
    },
    responseTime: 37
  },
  level: 'info',
  message: 'HTTP POST /graphql',
  timestamp: '2024-01-29T07:12:09.911Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': 'e6306ab0-87ef-4bde-874f-717941693f18',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '321',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: {
        query: 'mutation($id: ID, $idAuthor: ID, $title: String, $body: String) {post(id: $id, idAuthor: $idAuthor, title: $title, body: $body){create {id author title body}}}',
        variables: {
          id: 2,
          idAuthor: 1,
          title: 'title number 2',
          body: 'content number 2'
        }
      }
    },
    res: {
      statusCode: 200,
      body: {
        errors: [
          {
            message: 'Field "author" of type "UserCore" must have a selection of subfields. Did you mean "author { ... }"?',
            locations: [ { line: 1, column: 140 } ]
          }
        ]
      }
    },
    responseTime: 4
  },
  level: 'info',
  message: 'HTTP POST /graphql',
  timestamp: '2024-01-29T07:12:26.718Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': '9754e1c6-02ff-4af7-ae92-6fa794c6c1d9',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '314',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: {
        query: 'mutation($id: ID, $idAuthor: ID, $title: String, $body: String) {post(id: $id, idAuthor: $idAuthor, title: $title, body: $body){create {id title body}}}',
        variables: {
          id: 2,
          idAuthor: 1,
          title: 'title number 2',
          body: 'content number 2'
        }
      }
    },
    res: {
      statusCode: 200,
      body: {
        data: { post: { create: { id: null, title: null, body: null } } }
      }
    },
    responseTime: 7
  },
  level: 'info',
  message: 'HTTP POST /graphql',
  timestamp: '2024-01-29T07:12:37.516Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': 'c01b1f22-7b75-4cfc-add9-c58f1d7086fb',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '105',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: {
        query: 'mutation(id: ID) {post(id: $id){delete{id}}}',
        variables: { id: 2 }
      }
    },
    res: {
      statusCode: 200,
      body: {
        errors: [
          {
            message: 'Syntax Error: Expected "$", found Name "id".',
            locations: [ { line: 1, column: 10 } ]
          }
        ]
      }
    },
    responseTime: 2
  },
  level: 'info',
  message: 'HTTP POST /graphql',
  timestamp: '2024-01-29T07:16:21.520Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': '6c0e94e2-814c-4426-9ec4-b2e1464fc9cd',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '106',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: {
        query: 'mutation($id: ID) {post(id: $id){delete{id}}}',
        variables: { id: 2 }
      }
    },
    res: {
      statusCode: 200,
      body: {
        data: { post: { delete: { id: null } } }
      }
    },
    responseTime: 4
  },
  level: 'info',
  message: 'HTTP POST /graphql',
  timestamp: '2024-01-29T07:16:30.274Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': 'ea739e4f-8b68-46a9-824f-6170802b0791',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '247',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: {
        query: 'mutation($id: ID, $title: String, $body: String) {post(id: $id, title: $title, body: $body){create {id title body}}}',
        variables: { id: 1, title: 'title number 2', body: 'content number 2' }
      }
    },
    res: {
      statusCode: 200,
      body: {
        errors: [
          {
            message: 'id post be exist',
            locations: [ { line: 1, column: 93 } ],
            path: [ 'post', 'create' ]
          }
        ],
        data: { post: { create: null } }
      }
    },
    responseTime: 4
  },
  level: 'info',
  message: 'HTTP POST /graphql',
  timestamp: '2024-01-29T07:17:49.820Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': 'cfc7468f-4232-437a-a81c-eded5f4dad7a',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '247',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: {
        query: 'mutation($id: ID, $title: String, $body: String) {post(id: $id, title: $title, body: $body){update {id title body}}}',
        variables: { id: 1, title: 'title number 2', body: 'content number 2' }
      }
    },
    res: {
      statusCode: 200,
      body: {
        errors: [
          {
            message: 'id post be exist',
            locations: [ { line: 1, column: 93 } ],
            path: [ 'post', 'update' ]
          }
        ],
        data: { post: { update: null } }
      }
    },
    responseTime: 4
  },
  level: 'info',
  message: 'HTTP POST /graphql',
  timestamp: '2024-01-29T07:17:59.085Z'
}
{
  meta: {
    req: {
      url: '/graphql',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.36.1',
        accept: '*/*',
        'postman-token': '3b4b1467-07b2-4668-b85c-de1202d30dd4',
        host: 'localhost:1234',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '247',
        cookie: 'udemy_express=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibWFpbCI6Im5hbWR2IiwiaWF0IjoxNzA2NTAzMjMzfQ.9iea0zz7D28vPjQb5zpn8DJrlFwEf_gFoHmBMWAJVeE'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/graphql',
      query: {},
      body: {
        query: 'mutation($id: ID, $title: String, $body: String) {post(id: $id, title: $title, body: $body){update {id title body}}}',
        variables: { id: 1, title: 'title number 2', body: 'content number 2' }
      }
    },
    res: {
      statusCode: 200,
      body: {
        data: { post: { update: { id: null, title: null, body: null } } }
      }
    },
    responseTime: 32
  },
  level: 'info',
  message: 'HTTP POST /graphql',
  timestamp: '2024-01-29T07:18:25.962Z'
}
